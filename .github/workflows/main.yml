name: Project Main Branch Tests

on:
  pull_request:
  push:

jobs:
  example_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm install --save-dev puppeteer jest
      - name: '[unit test] example'
        run: npm test ./__tests__/example.test.js

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm install --save-dev puppeteer jest
      - name: '[unit test] project cards'
        run: npm test ./__tests__/ProjectCard.unit.test.js
      - name: '[unit test] contact page'
        run: npm test ./__tests__/Contact-Page.test.js

  E2E_tests:
    runs-on: ubuntu-latest
    services:
      web:
        image: nginx
        ports:
          - 5501:80
        options: >-
          --volume ${GITHUB_WORKSPACE}:/usr/share/nginx/html
          --volume ${GITHUB_WORKSPACE}/nginx.conf:/etc/nginx/nginx.conf:ro

    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm install --save-dev puppeteer jest
      - name: Start Web Server
        run: npm start &
        env:
          NODE_ENV: test
      - name: '[E2E test] project cards'
        run: npm test ./__tests__/ProjectCard.E2E.test.js --runInBand
      - name: '[E2E test] contact page'
        run: npm test ./__tests__/Contact-Page.E2E.test.js --runInBand

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS
        uses: actions/setup-node@v4
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm ci
      - name: Code Linting
        run: npm run lint

  # code_coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@main
  #   - uses: codecov/codecov-action@v4
  #     with:
  #       fail_ci_if_error: true
  #       flags: unittests
  #       name: codecov-umbrella
  #       token: ${{ secrets.CODECOV_TOKEN }}
  #       verbose: true
